<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.10.5 on darwin)" generated="2025-03-04T17:24:42.033841" rpa="false" schemaversion="5">
<suite id="s1" name="Api" source="/Users/n.thongjor/Projects/courses/babelcoder/robot/robot-test-demo/tests/demo/api.robot">
<test id="s1-t1" name="Create Article" line="14">
<kw name="Delete All Articles" type="SETUP">
<kw name="DELETE" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.495819" level="INFO">DELETE Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.495930" level="INFO">DELETE Response : url=http://localhost:9302/api/articles 
 status=204, reason=No Content 
 headers={'X-Powered-By': 'Express', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.496100" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<doc>Sends a DELETE request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.478513" elapsed="0.017624"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.496913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>204</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.496324" elapsed="0.000663"/>
</kw>
<status status="PASS" start="2025-03-04T17:24:45.477708" elapsed="0.019370"/>
</kw>
<kw name="Create New Article">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.498123" level="INFO">${body} = {'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${body}</var>
<arg>title=${title}</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.497708" elapsed="0.000451"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.517725" level="INFO">POST Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '63', 'Content-Type': 'application/json'} 
 body=b'{"title": "Test Article", "content": "This is a test article."}' 
 </msg>
<msg time="2025-03-04T17:24:45.517868" level="INFO">POST Response : url=http://localhost:9302/api/articles 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '67', 'ETag': 'W/"43-ucL83LxfDzcUZ4baPN7O4SrEkFs"', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"id":1,"title":"Test Article","content":"This is a test article."} 
 </msg>
<msg time="2025-03-04T17:24:45.518029" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.498356" elapsed="0.019725"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.519604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.518348" elapsed="0.001371"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.520844" level="INFO">${article} = {'id': 1, 'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${article}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-03-04T17:24:45.519936" elapsed="0.001007"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["title"]}</arg>
<arg>${title}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.521157" elapsed="0.000928"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["content"]}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.522257" elapsed="0.000660"/>
</kw>
<arg>title=Test Article</arg>
<arg>content=This is a test article.</arg>
<status status="PASS" start="2025-03-04T17:24:45.497338" elapsed="0.025680"/>
</kw>
<status status="PASS" start="2025-03-04T17:24:45.476514" elapsed="0.046720"/>
</test>
<test id="s1-t2" name="Get All Articles" line="17">
<kw name="Delete All Articles" type="SETUP">
<kw name="DELETE" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.528443" level="INFO">DELETE Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.528530" level="INFO">DELETE Response : url=http://localhost:9302/api/articles 
 status=204, reason=No Content 
 headers={'X-Powered-By': 'Express', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.528756" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<doc>Sends a DELETE request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.524592" elapsed="0.004207"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.530251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>204</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.528977" elapsed="0.001444"/>
</kw>
<status status="PASS" start="2025-03-04T17:24:45.524114" elapsed="0.006428"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.531365" level="INFO">${article1} = {'title': 'Test Article1', 'content': 'This is a test article1.'}</msg>
<var>${article1}</var>
<arg>title=Test Article1</arg>
<arg>content=This is a test article1.</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.530846" elapsed="0.000575"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.531917" level="INFO">${article2} = {'title': 'Test Article2', 'content': 'This is a test article2.'}</msg>
<var>${article2}</var>
<arg>title=Test Article2</arg>
<arg>content=This is a test article2.</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.531658" elapsed="0.000298"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.532411" level="INFO">${articles} = [{'title': 'Test Article1', 'content': 'This is a test article1.'}, {'title': 'Test Article2', 'content': 'This is a test article2.'}]</msg>
<var>${articles}</var>
<arg>${article1}</arg>
<arg>${article2}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2025-03-04T17:24:45.532141" elapsed="0.000308"/>
</kw>
<kw name="Create New Article">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.533648" level="INFO">${body} = {'title': 'Test Article1', 'content': 'This is a test article1.'}</msg>
<var>${body}</var>
<arg>title=${title}</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.533257" elapsed="0.000432"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.541520" level="INFO">POST Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '65', 'Content-Type': 'application/json'} 
 body=b'{"title": "Test Article1", "content": "This is a test article1."}' 
 </msg>
<msg time="2025-03-04T17:24:45.541639" level="INFO">POST Response : url=http://localhost:9302/api/articles 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '69', 'ETag': 'W/"45-zUCnYmSBnGZa/uoqE0fAXGimUZo"', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"id":1,"title":"Test Article1","content":"This is a test article1."} 
 </msg>
<msg time="2025-03-04T17:24:45.541812" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.533977" elapsed="0.007878"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.542727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.542062" elapsed="0.000749"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.543736" level="INFO">${article} = {'id': 1, 'title': 'Test Article1', 'content': 'This is a test article1.'}</msg>
<var>${article}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-03-04T17:24:45.543039" elapsed="0.000740"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["title"]}</arg>
<arg>${title}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.543937" elapsed="0.000685"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["content"]}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.544772" elapsed="0.000670"/>
</kw>
<arg>&amp;{article1}</arg>
<status status="PASS" start="2025-03-04T17:24:45.532737" elapsed="0.012930"/>
</kw>
<kw name="Create New Article">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.547439" level="INFO">${body} = {'title': 'Test Article2', 'content': 'This is a test article2.'}</msg>
<var>${body}</var>
<arg>title=${title}</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.547015" elapsed="0.000471"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.553032" level="INFO">POST Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '65', 'Content-Type': 'application/json'} 
 body=b'{"title": "Test Article2", "content": "This is a test article2."}' 
 </msg>
<msg time="2025-03-04T17:24:45.553217" level="INFO">POST Response : url=http://localhost:9302/api/articles 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '69', 'ETag': 'W/"45-60mTcfCEaGEgNg6iBVg4FMMWJwI"', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"id":2,"title":"Test Article2","content":"This is a test article2."} 
 </msg>
<msg time="2025-03-04T17:24:45.553529" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.547643" elapsed="0.005945"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.554763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.553933" elapsed="0.000926"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.555991" level="INFO">${article} = {'id': 2, 'title': 'Test Article2', 'content': 'This is a test article2.'}</msg>
<var>${article}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-03-04T17:24:45.555045" elapsed="0.001006"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["title"]}</arg>
<arg>${title}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.556333" elapsed="0.000885"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["content"]}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.557399" elapsed="0.000738"/>
</kw>
<arg>&amp;{article2}</arg>
<status status="PASS" start="2025-03-04T17:24:45.546406" elapsed="0.011837"/>
</kw>
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.565437" level="INFO">GET Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.565589" level="INFO">GET Response : url=http://localhost:9302/api/articles 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '141', 'ETag': 'W/"8d-EoFH8h7Soe/39lUD/9FZUxf0E84"', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=[{"id":1,"title":"Test Article1","content":"This is a test article1."},{"id":2,"title":"Test Article2","content":"This is a test article2."}] 
 </msg>
<msg time="2025-03-04T17:24:45.565867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.558463" elapsed="0.007457"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.566968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.566207" elapsed="0.000858"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.568210" level="INFO">${articles} = [{'id': 1, 'title': 'Test Article1', 'content': 'This is a test article1.'}, {'id': 2, 'title': 'Test Article2', 'content': 'This is a test article2.'}]</msg>
<var>${articles}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-03-04T17:24:45.567289" elapsed="0.001002"/>
</kw>
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.569282" level="INFO">Length is 2.</msg>
<arg>${articles}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-03-04T17:24:45.568901" elapsed="0.000579"/>
</kw>
<for flavor="IN ENUMERATE">
<iter>
<kw name="Should Be Equal As Numbers" owner="BuiltIn">
<arg>${index+1}</arg>
<arg>${article}[id]</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" start="2025-03-04T17:24:45.570609" elapsed="0.001597"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${articles[${index}]}[title]</arg>
<arg>${article}[title]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-03-04T17:24:45.572853" elapsed="0.000993"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${articles[${index}]}[content]</arg>
<arg>${article}[content]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-03-04T17:24:45.574023" elapsed="0.000847"/>
</kw>
<var name="${index}">0</var>
<var name="${article}">{'id': 1, 'title': 'Test Article1', 'content': 'This is a test article1.'}</var>
<status status="PASS" start="2025-03-04T17:24:45.570409" elapsed="0.004527"/>
</iter>
<iter>
<kw name="Should Be Equal As Numbers" owner="BuiltIn">
<arg>${index+1}</arg>
<arg>${article}[id]</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<status status="PASS" start="2025-03-04T17:24:45.575252" elapsed="0.000790"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${articles[${index}]}[title]</arg>
<arg>${article}[title]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-03-04T17:24:45.576228" elapsed="0.000907"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${articles[${index}]}[content]</arg>
<arg>${article}[content]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-03-04T17:24:45.577297" elapsed="0.000869"/>
</kw>
<var name="${index}">1</var>
<var name="${article}">{'id': 2, 'title': 'Test Article2', 'content': 'This is a test article2.'}</var>
<status status="PASS" start="2025-03-04T17:24:45.575131" elapsed="0.003102"/>
</iter>
<var>${index}</var>
<var>${article}</var>
<value>@{articles}</value>
<status status="PASS" start="2025-03-04T17:24:45.569707" elapsed="0.008593"/>
</for>
<status status="PASS" start="2025-03-04T17:24:45.523587" elapsed="0.055256"/>
</test>
<test id="s1-t3" name="Get Article By ID" line="35">
<kw name="Delete All Articles" type="SETUP">
<kw name="DELETE" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.584310" level="INFO">DELETE Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.585406" level="INFO">DELETE Response : url=http://localhost:9302/api/articles 
 status=204, reason=No Content 
 headers={'X-Powered-By': 'Express', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.585989" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<doc>Sends a DELETE request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.580167" elapsed="0.005944"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.587509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>204</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.586551" elapsed="0.001063"/>
</kw>
<status status="PASS" start="2025-03-04T17:24:45.579809" elapsed="0.007922"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.588585" level="INFO">${record} = {'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${record}</var>
<arg>title=Test Article</arg>
<arg>content=This is a test article.</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.588066" elapsed="0.000582"/>
</kw>
<kw name="Create New Article">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.590153" level="INFO">${body} = {'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${body}</var>
<arg>title=${title}</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.589744" elapsed="0.000454"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.596414" level="INFO">POST Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '63', 'Content-Type': 'application/json'} 
 body=b'{"title": "Test Article", "content": "This is a test article."}' 
 </msg>
<msg time="2025-03-04T17:24:45.596533" level="INFO">POST Response : url=http://localhost:9302/api/articles 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '67', 'ETag': 'W/"43-ucL83LxfDzcUZ4baPN7O4SrEkFs"', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"id":1,"title":"Test Article","content":"This is a test article."} 
 </msg>
<msg time="2025-03-04T17:24:45.596804" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.590353" elapsed="0.006500"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.597768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.597064" elapsed="0.000794"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.598725" level="INFO">${article} = {'id': 1, 'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${article}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-03-04T17:24:45.598030" elapsed="0.000738"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["title"]}</arg>
<arg>${title}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.598914" elapsed="0.000685"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["content"]}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.599749" elapsed="0.000826"/>
</kw>
<arg>&amp;{record}</arg>
<status status="PASS" start="2025-03-04T17:24:45.589073" elapsed="0.011617"/>
</kw>
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.607222" level="INFO">GET Request : url=http://localhost:9302/api/articles/1 
 path_url=/api/articles/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.607347" level="INFO">GET Response : url=http://localhost:9302/api/articles/1 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '67', 'ETag': 'W/"43-ucL83LxfDzcUZ4baPN7O4SrEkFs"', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"id":1,"title":"Test Article","content":"This is a test article."} 
 </msg>
<msg time="2025-03-04T17:24:45.607542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles/${ARTICLE_ID}</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.600910" elapsed="0.006679"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.609132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.608212" elapsed="0.001028"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.610530" level="INFO">${article} = {'id': 1, 'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${article}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-03-04T17:24:45.609688" elapsed="0.000896"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["id"]}</arg>
<arg>${ARTICLE_ID}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.610847" elapsed="0.000843"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["title"]}</arg>
<arg>${record}[title]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.612278" elapsed="0.001276"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["content"]}</arg>
<arg>${record}[content]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.613891" elapsed="0.000806"/>
</kw>
<status status="PASS" start="2025-03-04T17:24:45.579317" elapsed="0.035656"/>
</test>
<test id="s1-t4" name="Update Article" line="46">
<kw name="Delete All Articles" type="SETUP">
<kw name="DELETE" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.622610" level="INFO">DELETE Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.622949" level="INFO">DELETE Response : url=http://localhost:9302/api/articles 
 status=204, reason=No Content 
 headers={'X-Powered-By': 'Express', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.623268" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<doc>Sends a DELETE request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.616237" elapsed="0.007097"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.624363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>204</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.623615" elapsed="0.000849"/>
</kw>
<status status="PASS" start="2025-03-04T17:24:45.615877" elapsed="0.008701"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.625250" level="INFO">${record} = {'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${record}</var>
<arg>title=Test Article</arg>
<arg>content=This is a test article.</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.624896" elapsed="0.000404"/>
</kw>
<kw name="Create New Article">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.628415" level="INFO">${body} = {'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${body}</var>
<arg>title=${title}</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.627799" elapsed="0.000686"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.637162" level="INFO">POST Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '63', 'Content-Type': 'application/json'} 
 body=b'{"title": "Test Article", "content": "This is a test article."}' 
 </msg>
<msg time="2025-03-04T17:24:45.637288" level="INFO">POST Response : url=http://localhost:9302/api/articles 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '67', 'ETag': 'W/"43-ucL83LxfDzcUZ4baPN7O4SrEkFs"', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"id":1,"title":"Test Article","content":"This is a test article."} 
 </msg>
<msg time="2025-03-04T17:24:45.637749" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.628711" elapsed="0.009134"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.639141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.638137" elapsed="0.001150"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.640544" level="INFO">${article} = {'id': 1, 'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${article}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-03-04T17:24:45.639728" elapsed="0.000863"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["title"]}</arg>
<arg>${title}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.640762" elapsed="0.000737"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["content"]}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.641657" elapsed="0.000707"/>
</kw>
<arg>&amp;{record}</arg>
<status status="PASS" start="2025-03-04T17:24:45.626029" elapsed="0.016442"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.643086" level="INFO">${updated_body} = {'title': 'Updated Title', 'content': 'Updated Content'}</msg>
<var>${updated_body}</var>
<arg>title=Updated Title</arg>
<arg>content=Updated Content</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.642707" elapsed="0.000426"/>
</kw>
<kw name="PUT" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.648865" level="INFO">PUT Request : url=http://localhost:9302/api/articles/1 
 path_url=/api/articles/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '56', 'Content-Type': 'application/json'} 
 body=b'{"title": "Updated Title", "content": "Updated Content"}' 
 </msg>
<msg time="2025-03-04T17:24:45.648973" level="INFO">PUT Response : url=http://localhost:9302/api/articles/1 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '60', 'ETag': 'W/"3c-jaab5MbmOMhFmzSzUsVZ/pdI9ek"', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"id":1,"title":"Updated Title","content":"Updated Content"} 
 </msg>
<msg time="2025-03-04T17:24:45.649134" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles/${ARTICLE_ID}</arg>
<arg>json=${updated_body}</arg>
<doc>Sends a PUT request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.643448" elapsed="0.005725"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.650128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.649513" elapsed="0.000690"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.651132" level="INFO">${updated_article} = {'id': 1, 'title': 'Updated Title', 'content': 'Updated Content'}</msg>
<var>${updated_article}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-03-04T17:24:45.650525" elapsed="0.000645"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${updated_article["title"]}</arg>
<arg>${updated_body}[title]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.651377" elapsed="0.001246"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${updated_article["content"]}</arg>
<arg>${updated_body}[content]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.653231" elapsed="0.000829"/>
</kw>
<status status="PASS" start="2025-03-04T17:24:45.615372" elapsed="0.038938"/>
</test>
<test id="s1-t5" name="Upload Certificate" line="57">
<kw name="Delete All Articles" type="SETUP">
<kw name="DELETE" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.659946" level="INFO">DELETE Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.660032" level="INFO">DELETE Response : url=http://localhost:9302/api/articles 
 status=204, reason=No Content 
 headers={'X-Powered-By': 'Express', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.660180" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<doc>Sends a DELETE request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.656418" elapsed="0.003800"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.661063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>204</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.660398" elapsed="0.000746"/>
</kw>
<status status="PASS" start="2025-03-04T17:24:45.656075" elapsed="0.005169"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.662618" level="INFO">${record} = {'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${record}</var>
<arg>title=Test Article</arg>
<arg>content=This is a test article.</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.662046" elapsed="0.000624"/>
</kw>
<kw name="Create New Article">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.663964" level="INFO">${body} = {'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${body}</var>
<arg>title=${title}</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.663611" elapsed="0.000393"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.671083" level="INFO">POST Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '63', 'Content-Type': 'application/json'} 
 body=b'{"title": "Test Article", "content": "This is a test article."}' 
 </msg>
<msg time="2025-03-04T17:24:45.671236" level="INFO">POST Response : url=http://localhost:9302/api/articles 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '67', 'ETag': 'W/"43-ucL83LxfDzcUZ4baPN7O4SrEkFs"', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"id":1,"title":"Test Article","content":"This is a test article."} 
 </msg>
<msg time="2025-03-04T17:24:45.671598" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.664142" elapsed="0.007549"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.672947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.671920" elapsed="0.001120"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.673817" level="INFO">${article} = {'id': 1, 'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${article}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-03-04T17:24:45.673213" elapsed="0.000639"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["title"]}</arg>
<arg>${title}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.673979" elapsed="0.000566"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["content"]}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.674668" elapsed="0.000550"/>
</kw>
<arg>&amp;{record}</arg>
<status status="PASS" start="2025-03-04T17:24:45.663093" elapsed="0.012211"/>
</kw>
<kw name="Get File For Streaming Upload" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.675898" level="INFO">${certificate} = &lt;_io.BufferedReader name='/Users/n.thongjor/Projects/courses/babelcoder/robot/robot-test-demo/data/demo/file-upload.jpg'&gt;</msg>
<var>${certificate}</var>
<arg>${CERTIFICATE_PATH}</arg>
<doc>Opens and returns a file descriptor of a specified file to be passed as ``data`` parameter
to other requests keywords.</doc>
<status status="PASS" start="2025-03-04T17:24:45.675477" elapsed="0.000458"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.676612" level="INFO">${files} = {'certificate': &lt;_io.BufferedReader name='/Users/n.thongjor/Projects/courses/babelcoder/robot/robot-test-demo/data/demo/file-upload.jpg'&gt;}</msg>
<var>${files}</var>
<arg>certificate</arg>
<arg>${certificate}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.676208" elapsed="0.000523"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.690299" level="INFO">POST Request : url=http://localhost:9302/api/articles/1/certificate 
 path_url=/api/articles/1/certificate 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '56544', 'Content-Type': 'multipart/form-data; boundary=72d7e92de4e659086e516e562fa5ea8a'} 
 body=b'--72d7e92de4e659086e516e562fa5ea8a\r\nContent-Disposition: form-data; name="certificate"; filename="file-upload.jpg"\r\n\r\n\xff\xd8\xff\xe1\x00\x18Exif\x00\x00II*\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xec\x00\x11Ducky\x00\x01\x00\x04\x00\x00\x00\x1e\x00\x00\xff\xe1\x03/http://ns.adobe.com/xap/1.0/\x00&lt;?xpacket begin="\xef\xbb\xbf" id="W5M0MpCehiHzreSzNTczkc9d"?&gt; &lt;x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164352, 2020/01/30-15:50:38        "&gt; &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"&gt; &lt;rdf:Description rdf:about="" xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/" xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#" xmlns:xmp="http://ns.adobe.com/xap/1.0/" xmpMM:DocumentID="xmp.did:EB2490A12DF311EBA401D9387F83AB3A" xmpMM:InstanceID="xmp.iid:EB2490A02DF311EBA401D9387F83AB3A" xmp:CreatorTool="Adobe Photoshop CC 2019 Macintosh"&gt; &lt;xmpMM:DerivedFrom stRef:instanceID="xmp.iid:515578900E5111EBBB7CAEF29A118E86" stRef:documentID="xmp.did:515578910E5111EBBB7CAEF29A118E86"/&gt; &lt;/rdf:Description&gt; &lt;/rdf:RDF&gt; &lt;/x:xmpmeta&gt; &lt;?xpacket end="r"?&gt;\xff\xee\x00\x0eAdobe\x00d\xc0\x00\x00\x00\x01\xff\xdb\x00\x84\x00\x10\x0b\x0b\x0b\x0c\x0b\x10\x0c\x0c\x10\x17\x0f\r\x0f\x17\x1b\x14\x10\x10\x14\x1b\x1f\x17\x17\x17\x17\x17\x1f\x1e\x17\x1a\x1a\x1a\x1a\x17\x1e\x1e#%\'%#\x1e//33//@@@@@@@@@@@@@@@\x01\x11\x0f\x0f\x11\x13\x11\x15\x12\x12\x15\x14\x11\x14\x11\x14\x1a\x14\x16\x16\x14\x1a&amp;\x1a\x1a\x1c\x1a\x1a&amp;0#\x1e\x1e\x1e\x1e#0+.\'\'\'.+550055@@?@@@@@@@@@@@@\xff\xc0\x00\x11\x08\x02e\x03\x98\x03\x01"\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\xac\x00\x00\x02\x03\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x10\x00\x01\x04\x00\x04\x03\x04\x06\x05\t\x06\x06\x02\x03\x01\x01\x01\x00\x11\x02\x03!1\x12\x04AQ\x05aq"\x13\x81\x91\xa12\x14\x06\xb1BR#\x15\xf0\xc1\xd1\xe1br\x923S\xf1\x82\xb2C$\x16\xa2cs4T%\xc25\x83\x93D\xd2d\x11\x01\x00\x01\x02\x04\x04\x04\x04\x05\x04\x03\x01\x00\x00\x00\x00\x00\x01\x11\x02Q\x12\x03\x13!1Aa\x91\xa12\x14q\x81Rb\xb1"r3\x04\xf0B\x82\x92\xc1\xd1#\xe1\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xf4\xe9\xa1\x08\xc8B\x10\x80Bh@!\x08@!\x08@!\t\xa2\x84!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x083\xee\x8f\x8a\xb1\xcd\xd7\x1f\xad\x8f\xfdu\xdc\x1ap&gt;\xa9.\xce\xeb:\xfd+\x8f\xd6\xc0;\x0b\x7fz\x1e\xc9\x05\xe7\xbf\xf7?\xca\x1e\x9d?\xdb\xff\x00\x19Y\xd1?\x96x\x96\x18\xae\xc4r\\~\x89\xfc\xa2\xbb#%\xe8\x8eO5\xdc\xe4\xd4dZ.\xa4\xa3 \xe0b\xd8\xe3\xda\xaa!\xacq\xc3\x93\xb0~\xdc\xd4\xbb\xca\xac\xd7\tDy\x80XFd\xc4s|\x94\xc0\x1e\xf0\x0c\xf9\xa0\x0c\xce\x1abe\x8b\x13\x80n\xdcP5\x0e|\xf1Q1\x8c\xcb\tH\x10q0-\x88\xe0sRp\x08\x86$\xb3\xb9\xfc\xe5\x04M\x93\xc4J: \xc5\xe6d\x1cz\x94\xa2\x08\x88\x8b\x93\xa5\x83\x92\xe4\xb72\x9f\xa1\x05\xd9\xc0\xf4qt\nFa\xb4\xc4\xc8\x9e\xd0\x07\xb57$b4\xf3\x19\xa4\x0c\x86x\xfa\x13\xd5\xc3\xd0\x1f\x89@\xa4\x0bxX\xf3\x04\x1c\xbb\x13\x0f\xf5\x99\xf8\xb2\x06\xa2s\xc3\x874\x18\x82\x18\x87\x1c\x99\x00\x0b8$v&amp;\xe7\x10@\xef@\x077\xc7\x9a\x19\xb9\x94\x11s\xc6%\xb2f\xc7\xbf&lt;\x93\xccr\xefR\xfa\x12\xe3\x97\xa5\x02\x19\xe5\x87\xb52\xcd\xc9\x19~\x94\xd9\x04\\sfO\xb34\x8e\x88\xbc\xc8\x01\x86%\xb1d\xb5T\x0cC\x80e\xee\x8e|PI\xb9!\x18\xa6\x81iO\xb1\x08a\x92\x03\xb1$\xf0C`\x81\x079\x86\xe4\x86\x19&amp;\x84\x02G.I\xa3$\x08\xc4;\xba\x00\xc5\xc0\xc0\xf1\xfdI\x9c\x03\xb3\xb7$\x02\xe0\x16!\xf1c\x81\xf4\xa0\x8b6I\x87\xe7\x8frn\x1d\x92\x8e\xa6\x1a\x80\x07\xb0\xb8@\x8cq\x12,\xe3)q\n\x07P8\xd6H\xfbQg\xf5+R\x94\xa2\x01$\xe03A\x13\x8e\x04:B\x01\x83\x8d-\x90\x05\xd8v2\xb1Db\x1d\x88\xec8 \x1bO\x17\xe4\x96&amp;8\xf8_\x9b\x16RC\xbf\x1fB\x08\x818\xb0\x06,\xa1d\xae\x18F2-\x99\r\xff\x00\x089\xab\x94H\x91.\x0b\x0eL\x80\x12\xe0sgc\x9f\xa5G\xcc\x91\x98f\xd0\x01\xd6\xf9\xbf\x06Sl\x18\x9c=\xa8\xd2\xf8\xa0\x1c\x14%\xa4\xf1.\x86\xf4\xa0\x92I\xa1\x00\xa8\xde\xff\x00\xdb\x1e\xf0\xafTo\x7f\xed\xe5\xd8b\xb1\xa9\xe8\xbb\xf4\xcbz^\xbb\x7fT9\x17e&gt;\xc8\xcb\xe8\\\x98d\x1f\xb1u\xae\xfe]\xa4\x9f\xa9#\xec\\\x98\xbb\x0e\xe0\xbc\xda?\xdc\xf5kti\xa9\xf8\x13\xde\xb4\xd3\x9b\x9fR\xcfP\xf6rZ*\xf7\xbb8\xae\xf0\xe1.\x8d\x0f\x80\xfc\xebPYh\x18\x05\xa8p]!\xcaL)\x05\x10\xa4\x11\x0c&amp;\x80\x84\x02\x13B\x04\x84\xd2@!\x08@\x90\x84 HM%BII&amp;@\x92R\xcd$\t"\xa4\xa2\x88E"\xa4\x92\x08\x96\xc9D\x855\x1e\xf4\x10\x90\xc0\xa12\xccP\xaa7!\x08Yh&amp;\x92h\x04!\x08\x04!\x08\x04!4P\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x06}\xd7\xbdWy\\\xae\xb6?\xd0]\xdf\x06\xef\xd4\x17Wt\xcfP\xe2Ie\xca\xebc\xfd\r\xe7\xfe\x9f\xf8\x82\xf3\xdf\xeb\xff\x00(zt\xff\x00o\xfcg\xf1O\xa2\x06\xac\xf2\xc1v\x02\xe4t_\xe5\x1e\xe0\xba\xe1z#\x93\xcdw95\x19\x07\x03\x12\x18\xbe\nH9*\x8a\xac3\x8c\x0e\x81)H\xe0\x08b\xdd\xb8\xa4\xc2CE\x9e\xf1\x0eb\xf8\xfb\x14\xdeNAv\xe7\x83\x14\xc3\x0f\xd2\x82:C\x89\x1f\xa9\xee\xfapL\xc8\xc4\x13!\xe1\x18\xe1\x8e\x08\xf3!\xa8\xc3W\x88p\xef@"A\xc2\x06\xe0\xb1\x1cC\xa8\x98\x13\xf5\x88\xeeLfK\x93\xd8r\x1d\xc8f\x18\x19\x12\xef\x9b\x9f\xec@\x12 &lt;E\xf9\x9e\xe4\xc0\x07\x10\x80FX\xb8g\xe6\x821w@\x85`D\xc7\x19\x03\xc2E\xf3F\x81\x81\x01\xb4\xe4\x1d\x87\xebM\xf1O\x04\x11 \xe0F|_\x97b\x04DA\xd3\x1cys\xf4\x94\xa7mu\xce\x15\xcc\xb4\xedqXc\x8e\x90\xe7\x10\x18zT\xdd\x02\xc73\xeaC\x17\xe3\xe9M)\x07\x18\x87\xecA\x11\x19\x07\xd5=BG\xc2\x08\x03Ogj\x91\x89-\x8eY\xe1\x9a\x0cD\x81\x12\x00\xc4\xf0)\x80P&amp;&lt;\x13\xe2\xdf\xd8\x91`{P_1\xeb@\xd0R\x8e\xad#Sjl[\'\xect\xfd(\x0cP\x84 R\xd6\x1bH\x07\x1c\\\xb6\x1e\xd49|\xbd\'$\xd0\x80B\x0f\x00\x8cP4\x90\x86@\x12\x00s\x80HI\xdd\x9f\x0c\x13M\x02Cv&amp;\x97z\x04\xf88\xc4\x8e\t\xb9\xe4\x8f\xc8!\x02.\x07.\xe0\xe8\xc52=\x894\x90&gt;\xf4\x0c\x07$\x83\xf1\xcd\x0c1oJ\x01\xd0KzR\x90\x93\x82\x1b\xd3\xcb\xb1FQ\xb7V\xa8\x97\x03\xea\x06\x0f\xde\xe8&amp;\x0f4&lt;I\xeeQ\x8e\xb6\x1a\x80\x7f\xac\xdc\x13d\r\xf9\x07M\xd4"\x08\x00j~D\xa1\x8b\xe3\xe8(&amp;\x84!@*w\xbf\xf6\xd2\xc5\xb1\n\xe5N\xf7\xfe\xda]\xe1gS\xd1w\xe9\x96\xf4\xfdv\xfe\xa8q\xf7\x0c(\xba_\xb0C\xfa\x17*\x03\x01\xcd\x82\xeao\x03m\xe7\x11\xc5s+\xe1\x8f\x05\xe6\xd1\xea\xf5kth\xa88Z\xaa\x18\x87\xe4\xb2\xd3\x93\x15\xaa\xb7\xd4\xdc\x17\xa2\x1eyt(\xc9j\x0b5\x19\x05\xa4-\xb9\xc8\naEH"\x1ai&amp;\x80B\x10\x80B\x10\x81!\x08@!\x08@\x90\x84*\x12\x13I\x02II$\t#\xcd6B\x04\xa2\xa4\x92!(\x95$\x90FC\x02\x84\xe5\x91B#Z\x10\x9a\x8d\x04!\x08\x04!\x08\x04&amp;\x84P\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x05\x1b\xa1\x8dG\xb4\xfd\x0b\x93\xd6\xc9;\r\xc7t?\xc4\x17[u\x9dm\xcc\xfd\x0b\x91\xd6_\xe07\'\x83E\xff\x00\x88/=\xff\x00\xb9\xfeP\xf4\xe9\xfe\xdf\xf8\xcf\xe2\xb7\xa2\x7f(\xf7\x05\xd7\x0b\x8f\xd1\x08\xf2\x8br\x0b\xb0\x17\xa29C\xcdw94K\x10\xc8A\xc9\x11\x01\x11\xde\x82\t\xc5\xb0RH\x998`\x08\xe2]P\xb4\x9c\x00-\xcc \xc8\x08\x93"b\x06eI\x0039$\xf3AT\x0cf\xc6 \xc6 \xb81-\xab\xbf\xb0\xf2V1w\xd5\x83{\xac\x9a1|\x10\x18\xf3\xc1"\xed\x9e|F\x05=%\x98?\xe7Hk \x19\x03\x13\x96\x9c\xf1\xef\x08\x00\xcf\x80\xc4\x0c\xf8\xa0\xc8\x02\xcf\x89\xc5\x92p\x00r1\xc4\x17\x18\x8e$*g\xbd\xd8\xc6\xc8\xd7-\xc5br-\x11\xac\x1cOv\x08/\x01\x9d\x8e~\xf0\xe6\x93G\xdd\xf6\x0c\x16Iun\x9f\x0b&lt;\xa1d\xae\x98-!T%f\x93\xfbF#\x05\x19u\xae\x9b\x1b\rF\xc9y\x81\x98yrg\x90x\xf8\x99\xbc\\1A\xb8\x10&lt;$\xb9A\x00\xe6Y\xbbYra\xf3\x15\x12\x8c\x8f\x931\x18KL\x9eq\xd4$\xda\x9b@\x0e\xec\xab\xa7\xaf_\xb8\x94\x8cvu\xce\x963\xae1\xb0\xce\xd9\x80\xe7\x11\xa7LH\x01\xcb\xe4\x83\xb1\xe5\xc4OX\x8bH9\xd48\xbe~\xb5\x12-\x1a\xec\xad\xc9#\n\xe6t\x82}\xac\xb9\xe7\xaao\x81\xaas\xdb\xd2+\xbfQ\xae\x11\xb7\\\x84\x00x\xce\xc9\xc7\xc1\x18\x9f\xb5\x90\xe2\xb3n:\xa7V\xdb_\xba\x02\x9a\xed\xaa\x01\xeb\x06G\xc3\x1d#M\x90\x009\x04\x9e8w\x04\x1d\xc8\x9b\x08\x0e\x1c\xf1l@&lt;\xb0R.#\xaaM\x18\xf1\x91 \x01\xeb^\'\xadu\x88\xdb:\xfe\x1e\xdbN\xe2\xb8\xf9V\\\xe6\xb9\x19G\xde\xf0D\xb0\x8c\xb5c\xda\xb8\xf1\x85\xf7&lt;\x01\x94\x8c\x83\x9a\xe5"\x01\xe4\xc2G\x14\x1fH\xafq\xb5\xbc\x91M\xd0\xb2P-!\t\xc7\x02\xd9\x16*\xc1(KT\xb5\xc4\xe9\xc2m D\x7fx\xbe\x0b\xe6\x11\x84\xab\x9cL\xaar\x0e\x111$H\x02\xd2\x89\xd3\x89\x1c\xd9u\xa1P\x8c\xaf\xab\xa8Z.z\x8d\x94y3xN\xb6\r#\x18\xc4\xbcb\x00mlB\x14{\xbc8dq\r\xc4v!xZz\xde\xefcDh\xa2VQS&gt;\x82$\rr\xfb0\xf3bs\xe3\xd8\xba{\x7f\x99w\x02\x98\xdb`\x91\xb2p\x8c4\xda\x00\xa7X&gt;+\x84\xc6o\xc6!\x07\xa6\xf1pd\xa0,\x0f\xad\x89\x7f\t\x04\x9c=+\x8d\x0f\x99*\xa6\x07\xe3\xeb5\xdf\x16&gt;]la*\xe7\xeeLH\x9fb\x8c~m\xe9\xba\'l\xab\xba\x12\x03\xc3X\x02z\x8f\xd5\xc4{\xae\x83\xba[\x8a\x17\x06\x8f\x9c661\x9e\xde\xdac\xf5\xa5#\x02\x06\x1c\x03\xb9]*\xba\xcfI\xb4\xc4CyV\xa9\x8dQ\x8c\xc9\xac\x91\xcf\xc6\x02\r\x98\xa1S\x1d\xe6\xd6C_\xc4S\xa0\xe1\x19\x0b"\xc4\xb3\xf1*t\xdbU\xc4\x8am\x85\xa4f!(\xc8\x8fDJ\t\xb2y!\x08\x04\x93Q\xd5=m\xa7\xc0\xde\xf3\xe2\xfd\xc8\x1a0\xc9\x05\xdb\x02\x1f\xb5\x04\x86@#\x14v\xa3\x07g\xc7\x92\x01\x08KP\xd5\xa4bx\x81\x8bv\x94\x0f\x0e9\xa4b\t\x04\x8cc\xee\x9e\xf4\xcb\x0cP\x80 \x15\x11\x00\t\x90%\xcex\xe1\xeaM\xc3&lt;\x98zp\xf5\xa6\x82$I\xdd\xf0\xe4\x91\x11}$\xb9\x19\x87\xfc\xcaH \x02\xec\xe4\xe0\xe0\x07@\xd0\x84(\x05V\xe8&gt;\xdeC\xb4}*\xd5^\xe7\xfe\xde~\x8f\xa5f\xff\x00E\xdf\xa6[\xd3\xf5\xdb\xfa\xa1\xc6\xbcj\x96\x93\x88\x00\x93\xea\\\xa8\x02Y\xbd\x0b\xa92\xf2\xb6c\xea\xc0\xb2\xe5\xc3\xdd\x1c\x98`\xbc\xda?\xdc\xf5kti\xaf\xb7\x16\xc1j\xa9\x81\xc9f\xac;6\x0bM&gt;\xf0\xcc\x1ek\xd1\x0f&lt;\xba\x14d\x16\x91\x92\xcdC\xb2\xd2\x16\xdc\xe4\xd4\x82\x8a\x90D4\xd2M\x00\x84!\x00\x84!\x00\x92h@\x90\x84 \x12M\x08\x12I\xa1P\x92M\x08\x13$\x9a\x10$\x93B",\x91M\x92(\x11\xc8\xa1\x12\xc8\xa1\x06\xb4!\n(B\x10\x80M$\xd1I4!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x05;\x9c\xeb\xe4\xe5rz\xbb\xfc\x06\xed\xb9G\xfcAu\xb7\x19\xd7\xde~\x85\xc9\xea\xd8\xf4\xed\xe3\xf2\x8f\xf8\x82\xf3\xdf\xfb\x9f8\xfc\x1e\x9d?\xdb\xf9O\xe2\x97C\xfeQ\xee]\x80\xb8\xbd\x08\xf8\x0fr\xed\x0c\x97\xa29C\xcdw94\x14\xd2(\x17a.NA\x18z\xb3JP\x84\xc3N"C\xb4*\xef\xaa\xf9\xc20\xdb\xdb\xe4\x91\xd9\xa9\xc7%Qo\xb3\xbd\x0e\xa8\xda\xd5f\xde\x91V\xe2\xc8\x1bq%\xbc#\xd1\xa8\xb9V\x9b+\x8b\x19Y\x01\xfd\xe0?:\x0ewQ\xeb\xfb=\x99\xba\x98HY\xb9\xa0x\xe2D\xb4FG\xea\xc8\xc73\xd8\x17.\x1dK\xab\xefdga\xb6\xad\x8cO\x99a\xa20\x84\xa3\x16x@\xf9\x93v,\xed\x99[\xf7\xdd\x17\xa5o+\xf2(\xb2\x1b[c3#d\x00\x99\xd4q:\xb5\x9c\xf8\xbek\xcfo:\rUE\x8fQ\xaa\xcd\xe4\xa4ed\x06\xb9\xc6Q\x19NR\x80,P\x1dC\xaaoj\x80\x16n,\xb4\xddY\xb3oeS\x94\x00\x04\xe0&amp;\x1fI\xedl\xb2T\xd9\xd4\xad\xa2\xe8U\xb8\x9c\xf7u\xd5(H\xc8Ju\xc9\x8c|U\x07\xc7\x02}x\xe4\xb3n6\xb8\x08\xd5|/\x85bM H\x8c\x9b\x19\x98\x89~EW=\x8e\xfc\x039\xd32"5\xc8\xb6\xa6\x8f\xda)\xc5VQ\xb8\x8c\xe7\x18\xddW\x99\x19M\xd8\xcaZ\xa5\xab8\x82N\x90\xfcWB\xbd\x8c\xfe.\x02\x92(\x04\tF6\xcbEp\xfb\x112\x9b&gt;8\x96\xee\\\xe8l:\x97\x97\xe7SE\x93\x81\x8b\x19\xc6.\x06\xb0\xf8q\xcb\x88R\x1b\xaa5\x1a\xec\x8c\xb7\x10\xf0\x08\x1b\xc9j\xc0\x07Te\x1c\xdcH\xfb\xd9\xf0A\xe8m\xd8\x9d\x9cL\xe3\xbc6[\xb8\x90\x12\x94,\x8d0&gt;\xf1\xfb\xcb\x1c\x80\x0eL#\xda\x16{\xae\xa8\xd7\xa7{^\x8av\xc6\xb9\xeef.\x16\x9bb\x03B5\xca\x12\x04\x913\xe1\xf4\x8e\x0b\x9f\xb1\xdaQ\xbe\xb2f"\x1bm\x96\xce1\x95\xd6G\t\xca1\xc1\xc5\x93\x18JL\xe3\x0c\x11\xd4o\xd8\x9e\x99P\xdbR6\xf6\xee\xa6m\x9dbFzk\xac\xc8W\xa8\xc8\x9f\x11\xe3\xebDe;\x8b7\x1b\xaf6 \xc6\xeb\x0f\x8aA\x88\xe5\xf5\xbfg\x9f\x15\xd2\xd9N\xe8t\xe9n\xeb\xb2"\xcb\xe7:5\xdeH\x97\x93\x06\x94#Lb\x0bJR\x05\xc9\xc3\x82\xe6_\xb3\xb3iMVn|B\xf8F\xca\x04%\xaa2\x81\x97\x8d\xc8\x1e\x12\xdc\n\x94\xaa\xba\xb9YwO\xb2R\xa6\'Q\x11/eq\x18D\xcd\xb0ls\x08\xaae\xba\xb8n,\xb2\xb9\x9a\xa6D\xa0b\x06\x90c1\xe2\x81\x8cp\xf1q[am\x9b\xebI\x95\xd2\xb6\x14T\xf3\xb6\xd3(KH\x8f\x8a\xa1\x18\x12\xff\x00\x9cb\xb2]\xbc\xb6\xf1\x1f21\x9ca_\x97\x10C\x08\x0f\xd9n/\x8b\xf3J\x8d\xd4\xab\xd3\t\x8f2\x88\x89\x01T\xbd\xd7\x98\xc6l8\xa8\'\xb7\xdb\xfcU\xdav\xc6\xbc\xfc\x10\xb6z[\xebD9\xcc\xb0a\xdb\x82\x9e\xeclk\xaa\x8f.\xe9Y\xba\x9e\xa3y\x89 Rdp\x8e\x9e\x07?\x08&gt;\x95\x9a\x17J\xbf,\xb3\x98\x19J\xbc[N\xa0\xdc;qZ6;\x9f\x87\xb4\xdd\x13M\xa2\xb8\t\x08\xee\xa2\xfe,\xc8\x8bc\xabV!\xb3\xe2\xa8\x8e\xd6\x98\xcbqX\x85\x82\xb9\xc5\xa5\x11{\xc2:\xe2A0&lt;\x84\xd7G\xca\xb6\x8d\xec/\xd8\x9ai\xdc^|\xad\xd7O\x8cD\x84!\'\xf3`A$J,\x1aK5{\xaa\xb7\xbb\xb8\xee\xba\x9c\x86\xe2s\xb4F\xe8H\x18\x89W\xa7\xc3 "DF\x96nj\x17uS\x12N\xdeP\xaaBS\x87\x97\\@\xaa5K\x00+\x91\xf1\xff\x00j\r\xb7m:\xb7T\x9f\xc0F\xef\x88\xa3k-4Jg\xc6=\xe0\x002\x90\xd4\x186\xafR\xafmE\xf4Sl\xb7\xd4\xd7*\xad1\x8du\xdcMbR\xf7u\xd5,\xc0\x8f\x12\x02\x8fK\xabu\xb9\x9d\xbb:\xfc\xbd\xac.h\xddd\x8e\x9d\x06\x05\xebo\x17\x85\xa4\xcc\xdf\xa5u\xad\xdf[\xd3\xaa\xaa\xdb|\xb9\x13+k\xb7A\x060\xc6\x1f\xcb\xf3\x01%\xeb\xc4\x0f\xd0\x83\xcdOi\xa2\xd9m\xe5ur\xba2\xd1\x18\xc2BQ\xd4F\xaf\x0c\xb21\x1c\xd5\x83\xcb\x95fq\xae\xd9\x98\x18G\xcc\xd5\x85u\x8f\t\x83\x0f\xdb8\x1c\x97FwB\xcbw3\xbe\xc8n*1\x1eF\x8a\x8c\xa2+o\xe6\x18E\xa5\x12\xf9\x87\xcc\xe3\x82q\xbbgN\xe2\xad\xdc%v\xdbm\xb8\xaeuF\xf2"\x04\x0c\xf0&amp;\x10\xa8\x9f\xbb\x0c|\'\xeb \xc5GN\x1b\x99H\x19F\x81\x08L\x8b\x0c\xb5\xc6S\x1e(\xd6H8;\xb0S\x14\xc2\xbe\x9fq6\x9f&gt;z"v\xb2\x8f\x9d\x08\xd4x\xea\x97\xbb8\x97\xf7U5Qtk5\xd1*l\xae2--Q\x12\x9cFP\x94I\xc5\xc6,\x95\x91\xdd\x9bel\xe95y\xa1\xe2$4\xc3\x18\xbf\x87Y\xfb9 \xb2\x1b\xca\xeb\xa6\xd8\n\xe1e\x92\x0627\x00L\xc4\xc3\x1fw\x01\xa7\x87\xadk\xd8\xd9\xb3\xb8m\xb6\xf7W\r\x88\xaeR\xf37\xd1\x1am\x93\xb6\x88\x8b\x04\xa3\xa4\x9c\x9c\xae]\x80N\x06\xd8@S\x06&gt;Y\xc4\x89\x18\xe7\x10O\x15\xbe\xdd\xd6\xdbj)\xbbh!(n\xea\x8f\x9bIi\x1a\xe7\x11\xe5\xdd\xaa\xb98\x1a\xf8{\x10v\xa7\xd4\xba\x9e\xc6\xfa\xa8\x9d\xf1\xddm\xab\x13\xd1d#\x1b,\xba &lt;E\x92\x07\x19\x01\xcb\xd2\xa7G\xcd\xb5[G\x98i\x84\xa6\xc6Z#`\r\xcb\xc3 Oz\xf3\xa6P\x84l\xaf\xa7\x01\xf0\xf5\xc5\xb5\x88\x90l\xd7\x98\x90\x93\xfb\xbe\x8c\x9dl\x86\xf2\xa8\xed\xab\xb2\xce\x9f\x12!8\xce7\xb3\x998\x110\x03\xeb\x0c8\xa1Gkg\xf34-\x1a\xb70\xae5\x90\xe2T\xcc\x93\x0c\x1c\xc6q\xb1\xb8\xf1u\xd0\x87W\xe9\xb3\x86\xaf\x89\x8dxj"~\x13\x11\xdb\xc1p\xec\xdft\xd9Q+-\xdb|5\xa6DN\xc9UL\xb57\xbf\r$\xb4\x9f\x88Y\xe3\xba\xdb\xe8\x15mD*\xaaQkl\xd0!La\x13\xa8Nb&amp;GQ96H\x8fS\x1d\xf6\xca@\x0f\x89\xac\xea`\t\x90\x89/\x93\x02\xc5[\x19\xd7`\xd5\\\xe30\xed\xe1\x90\x90q\xdd\xc5x\x8d\xdch#\xca\xdbn\x05\xf7CH\x84%Y\x93T\xce\xf1,e\x89\xc5\xf2Z6}?tj\x86\xeaV\x8d\xb8\x96\x9f:\xc1!V&gt;\'\x16\x13\xe22\x8c[\x86=\xc8=\x89-\x90rK\x00\xec\xe4\xa3\x10X\xbb\x8e%y-\x86\xefu\xb7\xa2@W_\x91\x19h\x9d\xe6Q\xd3)\xc9\xc4\xdb\xcb\xf1\x08\xe1\x89g\xfa\xc7\x05\xd5\xdauJ6\xa2uo\xc9\xdaF\x1aD#`x\xc5\xc18Y\x13\'\x8c\x86N\x83\xb1\xc3\xf3\xaa\xaf\xddS\xb7\xd1\xe6;\xdb-\x10`\xe4\x96\xd5\xea\x00#omw\xd7\x1bv\xf6\xc7qT\xf1\x8c\xa2A\xef\xc6?\x9dM\xa5\xa83\x08\xb6c\t?\xe8A\xc2\xb3\xe6\xbd\xb4\x8c\xfc\xaa\xfc\xaa\xab\xd4\r\xb7\x16\x94\xa7\x17\x025T=\xecss\x82\xc7\x0f\x99w\x97F\xc8]d*\x8f\x88F\xda\xfe\xe4\x90"d\xf1\xb0\x82\xc7\xec\xe0\xc4\xe0WG\xaa|\xb9GS\xb2{\x9f6\xcd\xbe\xe2CK4eY&lt;d@\xc7\xc5\xc7\x15\xc8\xff\x00g\xf5\x01\xe1\xb3u_\x94\x03\x93\x119?`\x89d^\x05G\xcd\x16W\xb3\x8c-\x95\x97nb\x08\x8c\x89\x07Te\x88\xf3A\xc3P!\x8cG\x03\xc5o\x1f6m\xed\x8d\x99\xed\xab\x81\x00LGU\xb3\xe3\xe0\xac\xe0\x18a\x8f\x15\x9c|\xb5\x1d\x84~.7\x9b\xec\xa8\x8bc\\`\x01:&lt;@FNt\xbf5\xc1\x16\xd3h\xb6\xdb"M\xf6\xda\'\xad\xc6\x88\x82I#O\xd6\x05\xf1\xe2\x87\x07\xab\xff\x00p@W#\xb7\x9c\xef\xacHG\xcf\x98\x8c\x05s\x96&gt;]\x8e&lt;$\xf0\xc3\xd2\x96\xd7\xe6JM\xb1\x85\xf7D\x89\xcaXY\x11\\\xe1\x10DC\xca\x06P\'\xb1y(\xdf\xb8\x8d\xd3\xf8{\x0cM\xc4\x8d0&gt;\xfcbpp\\\xe1\xc1\xf1Q\xaa5J\xc1\x0bg\xa3K\x1a\xe4\x03\x8d`\xb8\x89\x19\xe3\xcd*Q\xf4\xe3\x9b!\x077B Un\xcbm\xa6\xdd\x9fJ\xb5Q\xbe-\xb4\xb0\xf6\x0f\xa5b\xff\x00E\xdf\xa6[\xd3\xf5\xdb\xfa\xa1\xc7\x9e\x14\xdaG\x10[\xd2\x176\xac#\x16\xe0\x17N\xf1\xf7F9\xea\\\xd8\x0c\x00+\xcd\xa3\xd5\xea\xd6\xe8\xd1P\xfdKU~\xf0+5]\xb9\xad5\xfb\xc1\xbd\xab\xd1\x0f&lt;\xba\x14;-!f\xa1i\x0bnri\x84\x82\x90D4!\x08\x04\xd0\x84\t\t\xa4\x80B\x10\x81!4 HB\x10$&amp;\x92\x01$\xd2T$&amp;\x84\t$\xd2@\x92RI\x11\x13\x92\x10r(A\xa9\x08B\x8a\x13I\x08\xa6\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84!\x05;\x9f\xf2\xfb\xcf\xd0\xb9][\x1e\x99\xbbo\xb2\x0f\xfcAuw?\xe5\xf7\x9f\xa1r\xba\x99\xff\x00\xd6oI\xfb\x1f\x9c/=\xff\x00\xb9\xf3\xff\x00\x87\xa7O\xf6\xfeS\xf8\xa1\xd0\x8e\x07\xb4b\xbb\x91\xc9pz\t\x1e\xb0\xbb\xd1\xc9z#\x93\xcdw4\x92\x96I\xac][uf\xcfe\xe7\xd58\xd7/6\xa8\x19\xd8\x1e\x11\x8c\xe5\xa6N\x15F\xacUv\xc6\xdb*\x9d`\x07\x981\xc0\x98\x91\xab\x02A\\C\xf3n\xcf\xce\xdc\x98\xc5\xe8\xa2\x0fQ\x1a\x84\xad\x9f,p\x11\xe0\xea\xcd\x9f^\x96\xe7D$*\x85\xf3wm^\x1d8\xe0&amp;\xc7,\xb9\xa0\xaa\xd8n6\xd5\xce\xaa\xb7\x11\xdc\xec\xdf\xca\x8bN&gt;t-\x18\xfd\xe5\x93\x89r\xdf`.d\xfc\x9d\x95;c\x1b\xe1u\xf0\xb2S\x97\x93\tJXD\xea\x81\xb4\x8c$\x04\xb90\xcc+\xaa\xebg}N\xe0\xd3\x18\xed\xe7M\xbel,\x9c\x84!\xe5\xc8\xe9y\x8f\x11\xd5\x86Q\xc3\xb1f\x8cm\x96\xce\xc8ytB\xdbg\x13\x10\xfal\xb22:\xa5\x18\xd8|z\x8f\x03\xde\xa8\xd3\xba\xdcn\xa6gE\x86\xda\x85\xb1\x16\n\xc4\x81\x84C{\xd7\x91\xe2\xc71\x92\xcdtm\xb8\x1d\xce\xfe\x98\xc0\xd04\xc0k\x8do\xa7!\xe5\x82\xfe.`\x12IN\x9d\xbe\xe0\xd5t6V\xf9\xbb\x8a\xe3\x02+f2\xaf=\x03\x84\xf4\xbe/\x8a4\x9b\x0e\xad\xb6\xd2b\xca\xc1\xae\xb3\xa6D\xc3\xc4&amp;,\x8e\xae8b\x10tGV\xafm\xb4#g\xb4\xae\x8f.2&amp;\xc3\\\xa2``=\xcd$\x03)q\xc7\x06\xcdL\xdf\xbc\x8c\x8e\xe66\xc2Z\x84#\xf7M\xa4H`|\x196&gt; \xf8\xba\xe5\xc3i\xbe\xff\x00&gt;\xab\t\xddOX\xb3^\x98\t{\xc7\xcd2\xec\x1e\xea\xd9F\xcb\xa1\xdf\xb5\xbavB\xdf.$\xbe\xf2\x1e\xe4\xa5\x87\x84T\t2\xef!\x031\xeaw\xd9\x16\xbbE\xd12\xa8\x08\xc0]\xe0\x9e~h\x18h\x1e\xc2\xb0\xf5*\xb66\xf5A\x0bv\xc6\xa8\xc6\xb8\xc2\xc8\xd0t\xbd\x80\x7f2S\x90 \x06\xcfV&gt;\x95\xbeP\xdbJ\xca\xb7\xb2\xbc\xd3=\xa0\x8dq\xaer\x99\x9b\x82\x18\xcfCDD\x03\xee\xe5\xcdN5n\xed\x94\xf7\xf1\xdcm\xec\xdc\xcb\xc7X&gt;:\xa5\x10q\x00\xc5\x86\xa08\x14\x19c\xd2\xf6\xb0\xd9N\xcabk\xa2,7\x16\xce\xf9y32\x0c&lt;\xad5\xc8\xcc,\x07mF\xfe`\x9b\xe8\xaa\xbd\xbc#\x031\xae?v&lt;1\xf0i\'\x8e%v,\xeb[\x83Q\xa2\xcd\xc0&amp;\xc2"g\xb4\x9ce\x1a\xa1!\x94\x84\xa1\x1d\x03\x1c\x97;{^\xd7\xca5\xdd\xb9\xaavF`\x8b`\x05v\xca\x004\xb57\xbf,\xb2\xc1\x06\x1d\xcc+1\x86\xda7\x0bc\xb7\xd4!lC\x13\xac\xbb\x10q8\xe2\x9d=\x1f\xaa\xc8\xb5t\xe6e\x166F&gt;!\xe1/\x1dO\x83\xf2[OM&amp;\'oV\xea;\x97\x86\x91\'\x8c\rGW\xd7\x8c\xf11\xc7\x16*{\xc8\xd7\x1a\'\x18BD\xc1\x84l\xd5\x19N\x93\x02D\xa5)8\x94c,p\xc7\x82\x94T\xe3\xf2\xcf\x9f)\x1bn\xa6\x8b\x83\x03\xb6\xa6\xc11\xa8\x01\xab2\xe0\x93\xc1F\xcf\x94oc\xe5\xda\xd3g\x8cf\x18\x1fHUt\xc8\xd5\xb8\xdcQM\x94\xea\xda\xd9)\x19\xceE\xe4#\x1f\xb3f\x13\x89\xd4\x1cc\xe8+\xad!\xd46\x93\xae;\x1d\xec\xad\xdb\x1b&amp;\xf1\xb2\x00\xd84\x871l\xa7\x1eM\x8a\xa8\xf2\xf3\xe9\xfb\xcd\xbd\x92\x85\xfb{\x1f\x84\xa3\x13!\xde\xe1\x03\xa6\xf5\t\xcb\xc1\xb6\xb0\x93\x90\xd3\xcd{=\xbf]\xa4\x89Cs\x10,\xae\x02wix\xca0\x96O\x03\x89\x97\xda\x11\xc9t\xa0)\xb6\x02\xca\xe6,\xaeA\xe3(\x97\x07\xd2\xa1W\x81\x8e\xc7\xc9\xb4\x9e\xa7E\x82\xba\x89\x16UD|N\xde\x17\x961\xd3\xcd\xb1R;\x87\xa0\xef6\xb4\xf9p\xda\xce\x00\xe1\x13_\x89\xc4\x18\xfb\xce\xf9\xf3^\xfbDt\xe9\xccr8\xac\x87\xa2\xf4y\x19\x13\xb2\xa5\xe7\xef\xe0@\x97\x1c@,\x83\xc1\xc2\xd3+\xe1\xf1R\x96\xe6\xa9\x13;\xa3\x01\xe3\x96\xbce\xc9\xe5\xc9_+6Q6m,\xd7\xe5\xc2-\x1bg)Nz\x81\xd5\xa0\n\xc9\x80\x1d\xab\xd6\x9f\x96:!\x9e\xb1\xb6\xd2]\xc0\x84\xe7\x10\x0fc\x1c\x14\xff\x00\xdb\xbd\x0cDG\xe0k s\xd4O\xa7\xc4\x8bW\x8e\xb3q\xb3\x8d\xff\x00\x15\xb5\xdb\xf9"VH\xd7\t\x138\x1a\xc9\xca\xc8\xb8b0f\xf4\xa9Oy\xd3\xf70\xba\xab6\xd1\xdb\xc0\x19YU\xb4\x8f\x10\x93{\x870\xd2+\xd5\xee&gt;Y\xe8\xd7\xc4Dm\xcd\x077\xa6F\x0f\xdf\x98*\xb3\xf2\x9fI/\xaf\xcd\x97"d\x1f&amp;\x18\x88\x87nH&lt;H\x1eU\xa1\xe4\xe6\x04\x11:\xcb\xe3\x9b\xc6]\x8bT.\xdaLB7\x0b\t\xd5\xe3\x94\xed\x91\x8b\x12\xf2\x96\x88\x8f\xa1z+~I\xda\x98\xff\x00\xa7\xdd\xd9\x196\x1edc(\xbfn\x96+ \xf9#~L\xb5n\xe8\x88\x1e\xe9\xd33\xa8sn\n\x0cC\xa9\xed"`/\xdb\x1b\xaa\xac\x98\x89\xc6M\x19\x8e\xda\xe5\x16\x12nL\xfcU[\xfd\xd6\xceU\x1a\xf6\x91\x10\x12\x99\x91"",\x08\x186m\x875\xd8\xff\x00e^ba\xf1\x95\x00\xfa\xa2|\xb9\x99;3\x13\xab%h\xf9#nk\x94g\xbc\x9c\xa5(\xb4|\x11\x11\x8c\xb9\xe6\xe4*&lt;\xa8\x95\xf4\xd8\xf1\x12\xa6@\x82\xc4\x18\xb1n\xd5\xb6=Cyl|\x98\xcaF$\xeb\xbb\x07\x1e\x0c\x01:\x19\x80\x07\x16\xcdzi\xfc\xb7~\xe8\x08o\xf7\xa6u\x88B\x07\xc9\x12\x8c\xa7:\xc6\x98\xcebfQ}8`\xb9]W\xe5}\xedWT:eR\xb6\x93\x11\x19\xc8H\x06\x94K\xea\x9b\x9e&lt;\xf9\xa1Vkcti\xdc\r\xbcguv7\xde\x12\x0e\x89\x08\xbc\x84\xe2\x06\x06C%\x88W(\xd9\\4J&amp;\xcdD\xc6\xd7\x18\xc7&lt;0\xc4~\x85m;N\xb9E\x92\xb2\xbd\xad\xc6q\x93X\xf02\x129\x98\xcc\x1fx\x15\xe97\xb5\xfc\xc3\x1f \xedg\x19W(\xc6?\reb\xe1\t\x08\xbc\xb5Y(\x96\x89\xc9\xfd\x08U\xc4\xb8\xee6\xbbM\xb5\xc6\xd9W-\xaf\x83H\x8bN1\x99\xf3`\x04\x8ba8\x92\x18\xe0\xe1F\xe9\xc2\xfa\xac0$m\xa3tM\xd7Q\xa9\xe5+#(\xc0\xb1\xcb,\x86\x0b\xd1\xed\xf6\xbdcsT\xe7\xd5\xa3D\xac\x94\xbc\xbf\x871\x12\x87\x95\xaa$\xc8\x98g!\x8e\x95~\xd3\xa6m:l,\xf8\n\x8c|\xc3\xaa^d\x89\xc3\xec\x93\xc0rD\xab\xc4\xd7n\xe3ot.\x95\xff\x00\x0fur\x10\x12:|\xca\xf4\xbb\xeb\x88r\xe3\xb4b\xbd\x14v{^\xa9\x18\xca\x9d\xcdW\xee\xeb\xaa\x1edm\x84\xe5\x1f\x0b\x81\xae\x00\xc7\xde\x89\x1a\x80\xc4\x1cB\xe8\xcfkL\xf7\x9em\xb7\xdb;#\xe3\x11\x8dQ\xd1\xa7?\x14\xcdd\xc9\xb8\xe3\x92\xc1MU\xd5U\xfb\xee\x9b\xe6\x8d\xd5\xb3\xf2\xcd\xf7\xc0\xd5\x00d\xcf/*1\x91 \x8fte\xdc\x85N\x8e\x99\xbc\xda\xcbw)S\r\xdf\xc4\xe91\xa6\xb9\x08Z\x0c}\xd9FGLK\x1c\x86~\x95\x93\xfd\xc1\xd46\xb7[\\\xc9\x8e1\x86\xbbj\x99i\xf1\xc6c\xc488g\xcd\x95\x9b\x9bw\xb7R~.[\x8b\xa1\xa7Us\xa6\xb3\x1d\xbc\x88\xc0\xc6\xea\xe1\xe3\xcf\xec\xe1\xc9SF\xdfs\x1d\xc4&gt;.\xab%6\x12\x9c\x87\x9b\xe4V\xf1\xc2\x02\x01\xf5\x1e\xe4\x1d\xba\xfa\x9e\xfe\xb8&gt;\xff\x00oU3\x13\x11 Z\xc2U\xc9\xa3\x19\xc2E\xe2e\xab\xea\x96\xec\xc5^z\xb6\xc3Y\xaa\xd3:f\x0e\x907\x105FR\xfb"r\xf0\xbb\xf6\xaf3\xba\xa6\xcd\xce\xe4\x0bv\xfb\xabc\x19\x08G\\\t\x87\x97\x11\xabKF.\xcf\x84d\xfd\xebV\xd6\x10\xbfm-\xa0\xd8od$\x0b\xd7l\xac\x85b9\x97\x99-\xdc\x04_\x82\x0e\xdd{\xad\x88\x8c%e\x95\xd3+%\xa2 Y\t\xc4\x9e\r(\xf3\xed\x0b\x05\xdf/\xfc\xbd\xbc\x98\xb6\xb9\xc6,X\x8al\x11\x8c\xbb\xc4r\xef\\k\xfa6\xe6W\xd7f\xd7g8k\xb0D\xea-\xabN&gt;/\x07\x82&lt;\x89\xcdKqWP{E\x9d:\xe8n\x80\x90\xaa\xea\xebyW&amp;\x0c\xd3\xad\x84\xa0},Pk\xde\xf4.\x9d\xd3\xe8\xafk\xb8\xb6q\x16\xdd++\xba&gt;\\l\r\x11\x11\x19\x9b=\xe0\x1f\r9\xbe*\xc3\xd1\xbe^\xb8\xc6\x8b%:\xf7\x11#Q\xb2\xc3]\x84\x9e\x02\x0c\xc7\x11\x90\x0b\x1e\xe7\xa7\xf5\x1d\xcf\x95g\x93d\x04`\x04`#)F\xbb\x86D\xc6n\x04dx\x85\x8a]\x1b\xab\xc6\x81:v\xf7\x89k\x02\xc8\xb3L\xc8\x17q\xf5\x88\x1c\xdd\x17\xe6\xf7\xc8G\x01\xdc&gt;\x84(\x81Q\xbe\xff\x00\xb4\xb7\xb8}*\xf5N\xf7\xfe\xd2\xce\xd0&gt;\x95\x9b\xfd\x17~\x99oO\xd7o\xea\x87*\xd8\xbca\x1e\x1c{\x97*-\xc40\x05u\xad}Q\x03\x17\\\xb0\xe3\x13\xea^]\x1ew|\x9e\xbdnP\xbe\xa5\xa6\xbc\xd6x`G\xd3\xc5i\xaf\x02\x07/Z\xf4\xc3\xcd-\xf4-#%\x9a\x8c\x87b\xd2\x16\xe1\xceL)\x05\x15 \x88hB\x104!\x08\x04!\x08\x12\x10\x84\x02\x10\x84\t\t\xa4\x80I4 HB\x15\t\x08B\x01.\xe4\xd2@\x92,\x9a\x11\x119\x14 \xe4P\x83J\x10\x85\x1a\t\xa1\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08\x04!\x08*\xdc}N\xf3\xf4._R\x1f\xfa\x9d\xe0\xff\x00\x96~\x90\xba\x9b\x8fv=\xeb\x99\xd4\x87\xfe\xab{\xff\x00N_H\\/\xfd\xc7\xa3O\xf6\xd9z\x01\xc4\x1eaz\x08\xe4\xbc\xef@\xf7\xa3\xdc\xbd\x14r]\xe3\x93\xcfw4\x96m\xfe\xc6\x9e\xa1\xb4\x9e\xce\xf3!U\x86&amp;F\x04\txK\x86%\xd6\x94 \xe1\xd7\xf2\x8fJ\xacN0\x9d\xed`\x02~1\x88\x07S{\xbc\xd5\x9f\xed^\x93\xe5\x1a\x8f\x9c_\r~g\x8c\x0e"%\xb0~+\xab12b#\x84q\xd4Fx\xe0\xa0!h\xb0L\xc8\x0f\x0e\x9d#\x10yD?\xadTs(\xf9O\xa2\xd138\xc6\xd9\x124\xb4\xecp\xc7\xd0\x16\xa8tN\x99\\\xea\xb4W/2\x960\x9c\xa4\xe4\xc8\r"r\x7fzM\x83\xadq\x85\x83Q\x95\x86D\x97\x18a\x10\xee\xc0%|!\x85\xd3 \n\x81$\x97:_9D\x0f\xad\xc1\x06k:&gt;\xc2\xe1(\xdf\x1b.\x12:\x88\x9d\x87&gt;\xcd\x1aYF\x9e\x87\xd3(\x9e\xaa!:\xec\x11c8\xd9-F=\xa4\x92\xb6V,1\x06\xc2D\x8e&amp;#\x06\xfd\x93\xcd?/\xc4I\x91 \x97\x03&amp;\xf4\x8c\xd0e\x97G\xe9\xf3$\xd9\x1b,xy`N\xc9HF \xea\x02&lt;\xb1\xe3\x9aC\xa2\xf4\xc1\x08\xd7\xe5\x13\x08K\\A\x9c\xdcH\x8d9\xbb\xb3p\xc9m\x00\xe0\xf2%4\x18\xe8\xe9\x1d7lfi\xa0\x03c\xeb2\x94\xa7\x89\xcc\xf8\xc9c\xda\xa3\xf8/Kb&lt;\x8c\t$\x8ds\xc4\xc8\xb9\xfa\xcbr\x10g=?a+!i\xdb\xd6l\xa8i\x84\xf4\x87\x11\xe5\xda;\xd5c\xa4t\xa1\x8f\xc2VN\xadNC\x9dG\x8b\x9cV\xc4 \xcez~\xc4\xe7D=\x0e8\xbe-\xda\xa1\xf8OK\xd4g\xf0\x95k\x91&amp;R\xd3\x89\xd5\x89s\xdb\xc9kB+&lt;:~\xc2\x00F\x1bj\xe3\x18\xbe\x90\x06\x03Q\xd4}\xb8\xab#\xb7\xdb\xc2"0\xaa1\x88\xc4\x00\x18\x02\xef\x87\xa5X\x84ECm\xb6\x12\x13\x14\xc0L\x11!=#P i\x07Vy`\xa5\n\xeb\xac\x11\\#\x01)\x19HD02\x96r\xc3\x89SB\x04\x84\xd0\xa2\x86B\x10\x81!\x014\x02\x10\x84\x02\x10\x84\x02\x10\x84\x03\x9eyd\x84!\x00\x84!\x00\xe7\'F\xa9;\xb9t!\x01\xaaN\xee_\xbd\x1a\xa5\xcc\xfa\xd2B\x07\xaa\\\xcf\xad\'\'2\x84"\x07&lt;\xd0\xe7\x9a\x10\x80r\x92i \x10\x84 \x15;\xcf\xfbi\xfa&gt;\x95r\xafs\x8d\x13\xee\x1fJ\x97\xfa.\xfd2\xde\x9f\xae\xdf\xd5\x0e\\\xd8\xd9\x00\xdf\x93.@w~d\xe1\xe9]y\x8f\xf5\x10\x1c8\xae&lt;[,\x83\xaf.\x8f;\x9e\xbdnV\xb4\xd4\xcc\xcbUnH\xecYk\x18\xf6pZk\xccs\xe2\xbd\x10\xf3K\xa1FKHY\xb6\xf92\xd22[s\x93R\n*A\x10\xd3I4\x02\x10\x84\x02\x10\x84\x02I\xa4\x80B\x10\x80I4\x90\x08B\x10$&amp;\x92\xa0I4 I&amp;\x84\t$\xd0\x82\'"\x84\x1c\x8a\x11\x1a\x13B\x14h!\x08@!\x08@!\x08@!\x08@!\x08@!\x08@!\x08@!\x08@!\x08@!\x08@!\x08@!\x08@!\x08@!\x08AV\xe3\xdc\x1d\xeb\x99\xd4\xb0\xe9;\xbf\xfag\xe9]=\xcf\xf2\xdf\x92\xe5\xf52\x7f\x08\xdc\x03\x87\xdd\x12}k\x86\xa7\xaf\xe4\xf4i~\xdf\xcd\x8f\xa0&gt;\xb8\xf3^\x8e+\xcd\xf4\x02\xf3\x8a\xf4\x91]\xe3\x93\x85\xdc\xd2B\x10\x88\x10\x84 \x10\x84*\x04!\x8a\x18\xa0\x10\x86)\xb1\xe4\x88HM\x8f$\x98\xa0\x10\x86(@!\x08@!\x08q\xccz\xd1B\x10\xe3\x98\xf5\xa4\xf1\xe6=a@\xd0\x87\x1c\xc7\xad-Q\xfbC\xd6\x104%\xaa\')\x0fXF\xa8}\xa1\xeb\tR\x92\x13Q\xd7\x0f\xb4=a\x1ee\x7fn&gt;\xb0\x95\x8cJN\t!@\xddH,l\x8b\xf2p\x97\x9fG\xf5c\xebJ\xc60\xb9g\tX\x85\x0f&gt;\x8f\xeaG\xd6\x97\x9fG\xf5#\xebS5\xb8\xc7\x89\x96\xec\'\xc1b\x15Gs\xb6\x05\x8d\xb1~\xf4\x1d\xce\xd8glBf\xb7\xea\x8f\x13%\xdfM\xde\x0bP\xaa\x1b\x9d\xb9\x0e,\x89\t|^\xdb\xfa\x83\xda\x99\xed\xfa\xad\xf12]\xf4\xdd\xe0\xb9\n\xaf\x89\xdb\x9f\xf3\x07\xb5/\x8b\xdb\xfd\xb1\xea)\x9e\xdf\xaa\xdf\x15\xc9\x7f\xd3w\x82\xe4*&gt;3m\xc2o\xdc\n\x7f\x15G\xda&gt;\xa2\xa6{&gt;\xab|M\xbb\xfe\x9b\xbc\x17$\xa9;\xcd\xb0\xceG\xd4TOP\xda\x0f\xac\x7f\x84\xa6\xe5\x9fU\xbe&amp;\xdd\xff\x00M\xde\r\x08Y\xbf\x11\xdas\x97\xf0\x94~!\xb6\xfd\xbf\xe1M\xcb&gt;\xab|WkS\xe8\xbb\xc1\xa5\x0b7\xc7\xed\xceZ\xff\x00\x85K\xe3h\xfd\xaf\xe1M\xcb&gt;\xab|M\xadO\xa6\xef\x05\xe8Y\xce\xfbn3\xd4=\n\x12\xea{Q\xf6\x8fpSwO\xea\xb7\xc4\xda\xd4\xfan\xf0jB\xc6:\xad\x07*\xe6q\xe4\x10z\x9dN\xde]\x9d\xec\x13wO\xea\x83gS\xe9\x96\xc5^\xe7\xf9\x13\xf4}*\x9f\x8f\xab3\t\x0fR\x8c\xb7\xd5]\x13Tc O\x12\xcd\x9fb\x97jY6\xccE\xd1\xc6%\xabt\xb5"\xe8\x99\xb6xL1\xd8\x1e\xf0\xd8`\xb9\x10\xcd\xfbJ\xec\xe9}\xc6&lt;C.,3\xf4\x91\x87z\xe1\xa3\xce\xe7}nV\xb4\xd5\x8b\x0fj\xd5^a\xcb\xb2\xcdTr/\x8f\x15\xa6\x1e\xf0^\x88y\xa5\xbe\x86`\xb5\x05\x9a\x8c\x96\x90\xb6\xe7&amp;\x98I0\x81\xa6\x92h\x04!\x08\x04!\x08\x04\x93B\x04\x84!\x00\x84!\x02B\x10\x80I4\x95\x02\x10\x84\t\x08B\x04\x84\xd2D#\x91B\x0eE\x084!\x08Q\xa0\x84!\x00\x84!\x00\x84!\x00\x84!\x00\x84\x9dG\xb4\xa5V\x89\xa1\xc70\xab!\xc2R\x00\xf7\x85*\xb9Vj\x8f0\x8dq\xc7\x11\x86j\x83\x18\x80N8\x86\xed\n\xbb"E\x13\x12\x90\x1e\x13\x10\xd9\x02y\xa97,Y\xdd\x7f\xc5m\xdc\x8f08\xcf&lt;0|\xfb\x94\xbc\xfa0\xfb\xc8\xe3\x92\xe1\xd5S\x86\x913\x8e@\x97m.=|\x06\n\xed\x061\x11\x1e-&gt;\x13\xc9\xfd\xec\x1f\xbdgrpkj1u\xbc\xfa?\xa9\x1fZGq\xb7\x00\x93lXg\x8f%\xc7\x15\xc6V8\xf1ib8\xf8\xa2O\xd68b\xea\x8bi&gt;|@\x91\x89\xb6&amp;\x10\x0e\xf2\x8b{\xe1\xbbNI\xb98\x1bQ\x8b\xbf\xf1;o\xea\xc3\xd7\xcd\x12\xddmc\x84\xaf\xacw\xcc~\x95\xe6\x0e\xdf\r\x062\x9cI\xd2\x01\xfb\xb8\xb7\xec\xb7j\xcbn\xda&amp;0\x11c\xa0\x12c\x00N\xa9D\xf3\xc9\xd3s\xb2\xec\xf7{!\xb8\xdb\xcb\xdd\xb6\x07\xfb\xc1\x02\xeaNV\xc3\x1c\x8e\xa8\xfe\x95\xe2/\xdb\xe0e"\x018\x88\xcaX\x90\x0e9;b\xa3'... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2025-03-04T17:24:45.690796" level="INFO">POST Response : url=http://localhost:9302/api/articles/1/certificate 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '180', 'ETag': 'W/"b4-AJh5yx2iEGEPOloKbKjH4U4RV+M"', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"message":"Certificate uploaded successfully.","article":{"id":1,"title":"Test Article","content":"This is a test article.","certificate":"uploads/1741083885685-file-upload.jpg"}} 
 </msg>
<msg time="2025-03-04T17:24:45.690984" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles/${ARTICLE_ID}/certificate</arg>
<arg>files=${files}</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.677110" elapsed="0.013912"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.691842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.691262" elapsed="0.000653"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.692715" level="INFO">${updated_article} = {'message': 'Certificate uploaded successfully.', 'article': {'id': 1, 'title': 'Test Article', 'content': 'This is a test article.', 'certificate': 'uploads/1741083885685-file-upload.jpg'}}</msg>
<var>${updated_article}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-03-04T17:24:45.692131" elapsed="0.000621"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_article["article"]["certificate"]}</arg>
<arg>uploads</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-03-04T17:24:45.693024" elapsed="0.000538"/>
</kw>
<status status="PASS" start="2025-03-04T17:24:45.655466" elapsed="0.038317"/>
</test>
<test id="s1-t6" name="Delete Article" line="68">
<kw name="Delete All Articles" type="SETUP">
<kw name="DELETE" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.699533" level="INFO">DELETE Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.699641" level="INFO">DELETE Response : url=http://localhost:9302/api/articles 
 status=204, reason=No Content 
 headers={'X-Powered-By': 'Express', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.699821" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<doc>Sends a DELETE request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.694749" elapsed="0.005115"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.700754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>204</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.700072" elapsed="0.000768"/>
</kw>
<status status="PASS" start="2025-03-04T17:24:45.694441" elapsed="0.006537"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.701957" level="INFO">${record} = {'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${record}</var>
<arg>title=Test Article</arg>
<arg>content=This is a test article.</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.701348" elapsed="0.000665"/>
</kw>
<kw name="Create New Article">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.704743" level="INFO">${body} = {'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${body}</var>
<arg>title=${title}</arg>
<arg>content=${content}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-03-04T17:24:45.704263" elapsed="0.000541"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.714104" level="INFO">POST Request : url=http://localhost:9302/api/articles 
 path_url=/api/articles 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '63', 'Content-Type': 'application/json'} 
 body=b'{"title": "Test Article", "content": "This is a test article."}' 
 </msg>
<msg time="2025-03-04T17:24:45.714232" level="INFO">POST Response : url=http://localhost:9302/api/articles 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '67', 'ETag': 'W/"43-ucL83LxfDzcUZ4baPN7O4SrEkFs"', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"id":1,"title":"Test Article","content":"This is a test article."} 
 </msg>
<msg time="2025-03-04T17:24:45.714680" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles</arg>
<arg>json=${body}</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.705176" elapsed="0.009588"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.716237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.715193" elapsed="0.001195"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.717773" level="INFO">${article} = {'id': 1, 'title': 'Test Article', 'content': 'This is a test article.'}</msg>
<var>${article}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-03-04T17:24:45.716668" elapsed="0.001158"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["title"]}</arg>
<arg>${title}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.718219" elapsed="0.002424"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${article["content"]}</arg>
<arg>${content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.721178" elapsed="0.001942"/>
</kw>
<arg>&amp;{record}</arg>
<status status="PASS" start="2025-03-04T17:24:45.703024" elapsed="0.020315"/>
</kw>
<kw name="DELETE" owner="RequestsLibrary">
<msg time="2025-03-04T17:24:45.730489" level="INFO">DELETE Request : url=http://localhost:9302/api/articles/1 
 path_url=/api/articles/1 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.730656" level="INFO">DELETE Response : url=http://localhost:9302/api/articles/1 
 status=204, reason=No Content 
 headers={'X-Powered-By': 'Express', 'Date': 'Tue, 04 Mar 2025 10:24:45 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=None 
 </msg>
<msg time="2025-03-04T17:24:45.730910" level="INFO">${response} = &lt;Response [204]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/articles/${ARTICLE_ID}</arg>
<doc>Sends a DELETE request.</doc>
<status status="PASS" start="2025-03-04T17:24:45.723666" elapsed="0.007358"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2025-03-04T17:24:45.733071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>204</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2025-03-04T17:24:45.731763" elapsed="0.001583"/>
</kw>
<status status="PASS" start="2025-03-04T17:24:45.694038" elapsed="0.039828"/>
</test>
<status status="PASS" start="2025-03-04T17:24:42.035534" elapsed="3.700204"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="Api" id="s1" pass="6" fail="0" skip="0">Api</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
